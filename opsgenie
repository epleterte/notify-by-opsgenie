#!/bin/bash
# Notify via OpsGenie
#
# Christian Bryn <chr.bryn@gmail.com> 2014-2016
#
# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE" (Revision 42):
# <chr.bryn@gmail.com> wrote this file.  As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
# ----------------------------------------------------------------------------
#
#
# docs:
# * https://mathias-kettner.de/checkmk_flexible_notifications.html
# * http://www.opsgenie.com/docs/integrations/nagios/rich-integration

LOGFILE="${OMD_ROOT:-}/var/log/opsgenie/nagios2opsgenie.log"
LOGFILE_ERR="${LOGFILE}"

[[ -d $( dirname ${LOGFILE} ) ]] || mkdir -p $( dirname ${LOGFILE} )

# this can be useful for debugging
#env > /tmp/opsgenie.notify.env

function print_usage {
  cat <<EOF
Usage: ${0} [-h|-r|-t|-T]
  -h   Print Usage
  -r   Set recipient(s)
  -t   Set teams
  -T   Set tags
EOF
}

opts=""
recipient=""
teams=""
tags=""
while getopts hr:t:T: o
do
  case $o in
    h)
      print_usage ; exit ;;
    r)
      recipient="$OPTARG"
      opts+=" -recipients=${recipient} ";;
    t)
      teams="$OPTARG"
      opts+=" -teams=${teams} ";;
    T)
      tags="$OPTARG"
      opts+=" -tags=${tags} ";;
  esac
done
shift $(($OPTIND-1))


[[ -z "${NOTIFY_WHAT}" ]] && { echo "error: environment variable NOTIFY_WHAT not set" >>$LOGFILE; exit; }

# these are just commands copied from the example nagios contact config from opsgenie, modified to use the correct variables
if [[ "$NOTIFY_WHAT" == "HOST" ]]; then
    nagios2opsgenie -entityType=host \
      -t="$NOTIFY_NOTIFICATIONTYPE" \
      -ldt="$NOTIFY_LONGDATETIME" \
      -hn="$NOTIFY_HOSTNAME" \
      -hdn="$NOTIFY_HOSTDISPLAYNAME" \
      -hal="$NOTIFY_HOSTALIAS" \
      -haddr="$NOTIFY_HOSTADDRESS" \
      -hs="$NOTIFY_HOSTSTATE" \
      -hsi="$NOTIFY_HOSTSTATEID" \
      -lhs="$NOTIFY_LASTHOSTSTATE" \
      -lhsi="$NOTIFY_LASTHOSTSTATEID" \
      -hst="$NOTIFY_HOSTSTATETYPE" \
      -ha="$NOTIFY_HOSTATTEMPT" \
      -mha="$NOTIFY_MAXHOSTATTEMPTS" \
      -hei="$NOTIFY_HOSTEVENTID" \
      -lhei="$NOTIFY_LASTHOSTEVENTID" \
      -hpi="$NOTIFY_HOSTPROBLEMID" \
      -lhpi="$NOTIFY_LASTHOSTPROBLEMID" \
      -hl="$NOTIFY_HOSTLATENCY" \
      -het="$NOTIFY_HOSTEXECUTIONTIME" \
      -hd="$NOTIFY_HOSTDURATION" \
      -hds="$NOTIFY_HOSTDURATIONSEC" \
      -hdt="$NOTIFY_HOSTDOWNTIME" \
      -hpc="$NOTIFY_HOSTPERCENTCHANGE" \
      -hgn="$NOTIFY_HOSTGROUPNAME" \
      -hgns="$NOTIFY_HOSTGROUPNAMES" \
      -lhc="$NOTIFY_LASTHOSTCHECK" \
      -lhsc="$NOTIFY_LASTHOSTSTATECHANGE" \
      -lhu="$NOTIFY_LASTHOSTUP" \
      -lhd="$NOTIFY_LASTHOSTDOWN" \
      -lhur="$NOTIFY_LASTHOSTUNREACHABLE" \
      -ho="$NOTIFY_HOSTOUTPUT" \
      -lho="$NOTIFY_LONGHOSTOUTPUT" \
      -hpd="$NOTIFY_HOSTPERFDATA" \
      ${opts} 1>>"${LOGFILE}" 2>>"${LOGFILE_ERR}"
elif [[ "${NOTIFY_WHAT}" == "SERVICE" ]]; then
    nagios2opsgenie -entityType=service \
      -t="$NOTIFY_NOTIFICATIONTYPE" \
      -ldt="$NOTIFY_LONGDATETIME" \
      -hn="$NOTIFY_HOSTNAME" \
      -hdn="$NOTIFY_HOSTDISPLAYNAME" \
      -hal="$NOTIFY_HOSTALIAS" \
      -haddr="$NOTIFY_HOSTADDRESS" \
      -hs="$NOTIFY_HOSTSTATE" \
      -hsi="$NOTIFY_HOSTSTATEID" \
      -lhs="$NOTIFY_LASTHOSTSTATE" \
      -lhsi="$NOTIFY_LASTHOSTSTATEID" \
      -hst="$NOTIFY_HOSTSTATETYPE" \
      -ha="$NOTIFY_HOSTATTEMPT" \
      -mha="$NOTIFY_MAXHOSTATTEMPTS" \
      -hei="$NOTIFY_HOSTEVENTID" \
      -lhei="$NOTIFY_LASTHOSTEVENTID" \
      -hpi="$NOTIFY_HOSTPROBLEMID" \
      -lhpi="$NOTIFY_LASTHOSTPROBLEMID" \
      -hl="$NOTIFY_HOSTLATENCY" \
      -het="$NOTIFY_HOSTEXECUTIONTIME" \
      -hd="$NOTIFY_HOSTDURATION" \
      -hds="$NOTIFY_HOSTDURATIONSEC" \
      -hdt="$NOTIFY_HOSTDOWNTIME" \
      -hpc="$NOTIFY_HOSTPERCENTCHANGE" \
      -hgn="$NOTIFY_HOSTGROUPNAME" \
      -hgns="$NOTIFY_HOSTGROUPNAMES" \
      -lhc="$NOTIFY_LASTHOSTCHECK" \
      -lhsc="$NOTIFY_LASTHOSTSTATECHANGE" \
      -lhu="$NOTIFY_LASTHOSTUP" \
      -lhd="$NOTIFY_LASTHOSTDOWN" \
      -lhur="$NOTIFY_LASTHOSTUNREACHABLE" \
      -ho="$NOTIFY_HOSTOUTPUT" \
      -lho="$NOTIFY_LONGHOSTOUTPUT" \
      -hpd="$NOTIFY_HOSTPERFDATA" \
      -s="$NOTIFY_SERVICEDESC" \
      -sdn="$NOTIFY_SERVICEDISPLAYNAME" \
      -ss="$NOTIFY_SERVICESTATE" \
      -ssi="$NOTIFY_SERVICESTATEID" \
      -lss="$NOTIFY_LASTSERVICESTATE" \
      -lssi="$NOTIFY_LASTSERVICESTATEID" \
      -sst="$NOTIFY_SERVICESTATETYPE" \
      -sa="$NOTIFY_SERVICEATTEMPT" \
      -msa="$NOTIFY_MAXSERVICEATTEMPTS" \
      -siv="$NOTIFY_SERVICEISVOLATILE" \
      -sei="$NOTIFY_SERVICEEVENTID" \
      -lsei="$NOTIFY_LASTSERVICEEVENTID" \
      -spi="$NOTIFY_SERVICEPROBLEMID" \
      -lspi="$NOTIFY_LASTSERVICEPROBLEMID" \
      -sl="$NOTIFY_SERVICELATENCY" \
      -set="$NOTIFY_SERVICEEXECUTIONTIME" \
      -sd="$NOTIFY_SERVICEDURATION" \
      -sds="$NOTIFY_SERVICEDURATIONSEC" \
      -sdt="$NOTIFY_SERVICEDOWNTIME" \
      -spc="$NOTIFY_SERVICEPERCENTCHANGE" \
      -sgn="$NOTIFY_SERVICEGROUPNAME" \
      -sgns="$NOTIFY_SERVICEGROUPNAMES" \
      -lsch="$NOTIFY_LASTSERVICECHECK" \
      -lssc="$NOTIFY_LASTSERVICESTATECHANGE" \
      -lsok="$NOTIFY_LASTSERVICEOK" \
      -lsw="$NOTIFY_LASTSERVICEWARNING" \
      -lsu="$NOTIFY_LASTSERVICEUNKNOWN" \
      -lsc="$NOTIFY_LASTSERVICECRITICAL" \
      -so="$NOTIFY_SERVICEOUTPUT" \
      -lso="$NOTIFY_LONGSERVICEOUTPUT" \
      -spd="$NOTIFY_SERVICEPERFDATA" \
      ${opts} 1>>"${LOGFILE}" 2>>"${LOGFILE_ERR}"
else
  echo "Unknown NOTIFY_WHAT: ${NOTIFY_WHAT}" > /tmp/opsgenie.notify.what.debug
fi
